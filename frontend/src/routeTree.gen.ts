/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as ProductsRouteImport } from './routes/Products'
import { Route as DynamicPricingRouteImport } from './routes/DynamicPricing'
import { Route as IndexRouteImport } from './routes/index'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsRoute = ProductsRouteImport.update({
  id: '/Products',
  path: '/Products',
  getParentRoute: () => rootRouteImport,
} as any)
const DynamicPricingRoute = DynamicPricingRouteImport.update({
  id: '/DynamicPricing',
  path: '/DynamicPricing',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/DynamicPricing': typeof DynamicPricingRoute
  '/Products': typeof ProductsRoute
  '/auth': typeof AuthRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/DynamicPricing': typeof DynamicPricingRoute
  '/Products': typeof ProductsRoute
  '/auth': typeof AuthRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/DynamicPricing': typeof DynamicPricingRoute
  '/Products': typeof ProductsRoute
  '/auth': typeof AuthRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/DynamicPricing' | '/Products' | '/auth'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/DynamicPricing' | '/Products' | '/auth'
  id: '__root__' | '/' | '/DynamicPricing' | '/Products' | '/auth'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DynamicPricingRoute: typeof DynamicPricingRoute
  ProductsRoute: typeof ProductsRoute
  AuthRoute: typeof AuthRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Products': {
      id: '/Products'
      path: '/Products'
      fullPath: '/Products'
      preLoaderRoute: typeof ProductsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/DynamicPricing': {
      id: '/DynamicPricing'
      path: '/DynamicPricing'
      fullPath: '/DynamicPricing'
      preLoaderRoute: typeof DynamicPricingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DynamicPricingRoute: DynamicPricingRoute,
  ProductsRoute: ProductsRoute,
  AuthRoute: AuthRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
